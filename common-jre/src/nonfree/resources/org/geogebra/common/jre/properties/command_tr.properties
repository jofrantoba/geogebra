# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Liste>, <Liste>, ... ]
AffineRatio=AfinOran\u0131
AffineRatio.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
Angle=Aç\u0131
Angle.Syntax=[ <Nesne> ]\n[ <Vektör>, <Vektör> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Kö\u015fe>, <Nokta> ]\n[ <Nokta>, <Kö\u015fe>, <Aç\u0131> ]
Angle.Syntax3D=[ <Nesne> ]\n[ <Vektör>, <Vektör> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Do\u011fru>, <Düzlem> ]\n[ <Düzlem>, <Düzlem> ]\n[ <Nokta>, <Kö\u015fe>, <Nokta> ]\n[ <Nokta>, <Kö\u015fe>, <Aç\u0131> ]\n[ <Nokta>, <Nokta>, <Nokta>, <Do\u011frultu> ]
AngularBisector=Aç\u0131Ortay
AngularBisector.Syntax=[ <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Nokta>, <Nokta> ]
Append=SonunaEkle
Append.Syntax=[ <Liste>, <Nesne> ]\n[ <Nesne>, <Liste> ]
ApplyMatrix=MatrisUygula
ApplyMatrix.Syntax=[ <Matris>, <Nesne> ]
Arc=Yay
Arc.Syntax=[ <Çember>, <Nokta>, <Nokta> ]\n[ <Elips>, <Nokta>, <Nokta> ]\n[ <Çember>, <Parametre De\u011feri>, <Parametre De\u011feri> ]\n[ <Elips>, <Parametre De\u011feri>, <Parametre De\u011feri> ]
AreCollinear=Do\u011frusalM\u0131
AreCollinear.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
AreConcurrent=Noktada\u015fM\u0131
AreConcurrent.Syntax=[ <Do\u011fru>, <Do\u011fru>, <Do\u011fru> ]
AreConcyclic=E\u015fÇemberselMi
AreConcyclic.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Nokta> ]
AreCongruent=E\u015fMi
AreCongruent.Syntax=[ <Nesne>, <Nesne> ]
AreEqual=E\u015fitMi
AreEqual.Syntax=[ <Nesne>, <Nesne> ]
AreParallel=ParalelMi
AreParallel.Syntax=[ <Do\u011fru>, <Do\u011fru> ]
ArePerpendicular=DikMi
ArePerpendicular.Syntax=[ <Do\u011fru>, <Do\u011fru> ]
Area=Alan
Area.Syntax=[ <Konik> ]\n[ <Çokgen> ]\n[ <Nokta>, ..., <Nokta> ]
Assume=Varsay
Assume.SyntaxCAS=[ <Ko\u015ful>, <\u0130fade> ]
Asymptote=Asimptot
Asymptote.Syntax=[ <Konik> ]\n[ <Fonksiyon> ]\n[ <Kapal\u0131 E\u011fri> ]
AttachCopyToView=KopyaEkle
AttachCopyToView.Syntax=[ <Nesne>, <Görünüm 0|1|2> ]\n[ <Nesne>, <Görünüm 0|1|2>, <Nokta 1>, <Nokta 2>, <Ekran Nokta 1>, <Ekran Nokta 2> ]
Axes=Eksenler
Axes.Syntax=[ <Konik> ]
Axes.Syntax3D=[ <Konik> ]\n[ <\u0130kinci dereceden denklem> ]
AxisStepX=XEkseniAd\u0131m\u0131
AxisStepY=YEkseniAd\u0131m\u0131
BarChart=SütunGrafi\u011fi
BarChart.Syntax=[ <Veri Listesi>, <Frekans Listesi> ]\n[ <Ham Veri Listesi>, <Çubuklar\u0131n Geni\u015fli\u011fi>, <Dikey Ölçek Faktörü (iste\u011fe ba\u011fl\u0131)> ]\n[ <Veri Listesi>, <Frekans Listesi>, <Çubuklar\u0131n Geni\u015fli\u011fi> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Yükseklikler Listesi> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <\u0130fade>, <De\u011fi\u015fken>, <Say\u0131dan>, <Say\u0131ya> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <\u0130fade>, <De\u011fi\u015fken>, <Say\u0131dan>, <Say\u0131ya>, <Ad\u0131m Geni\u015fli\u011fi> ]
BarCode=BarKod
BarCode.Syntax=[ ]\n[ <Resim> ]\n[ <Metin veya Say\u0131>, "<Biçim (opsiyonel)>", "<Hata Düzeltme (opsiyonel)>", <Geni\u015flik (opsiyonel)>, <Yükseklik (opsiyonel)> ]
Barycenter=KütleMerkezi
Barycenter.Syntax=[ <Nokta Listesi>, <A\u011f\u0131rl\u0131k Listesi> ]
Bernoulli=Bernolli
Bernoulli.Syntax=[ <Olas\u0131l\u0131k>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Binomial=BinomKatsay\u0131s\u0131
Binomial.Syntax=[ <Say\u0131 n>, <Say\u0131 r> ]
BinomialDist=BinomDa\u011f\u0131l\u0131m\u0131
BinomialDist.Syntax=[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali> ]\n[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
BinomialDist.SyntaxCAS=[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Bottom=Taban
Bottom.Syntax=[ <\u0130kinci Dereceden Denklem> ]
BoxPlot=KutuÇizimi
BoxPlot.Syntax=[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Ham Veri Listesi> ]\n[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Ham Veri Listesi>, <S\u0131nama D\u0131\u015farda kalan> ]\n[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Veri Listesi>, <Frekans Listesi>, <S\u0131nama D\u0131\u015farda kalan> ]\n[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Ba\u015flang\u0131ç De\u011feri>, <Ç1>, <Ortalama>, <Ç3>, <Biti\u015f De\u011feri> ]
Button=Dü\u011fme
Button.Syntax=[ ]\n[ <Ba\u015fl\u0131k> ]
CFactor=KÇarpanlar\u0131naAy\u0131r
CFactor.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]
CIFactor=K\u0130Çarpanlar\u0131naAy\u0131r
CIFactor.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]
CSolutions=KÇözümler
CSolutions.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]\n[ <Denklemler Listesi>, <De\u011fi\u015fkenler Listesi> ]
CSolve=KÇöz
CSolve.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]\n[ <Denklem Listesi>, <De\u011fi\u015fken Listesi> ]
Cauchy.Syntax=[ <Medyan>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]\n[ <Medyan>, <Ölçek>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Medyan>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Cauchy.SyntaxCAS=[ <Medyan>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
Cell=Hücre
Cell.Syntax=[ <Sütun>, <Sat\u0131r> ]
CellRange=HücreAral\u0131\u011f\u0131
CellRange.Syntax=[ <Ba\u015flang\u0131ç Hücresi>, <Biti\u015f Hücresi> ]
Center=Merkez
Center.Syntax=[ <Konik> ]
Center.Syntax3D=[ <Konik> ]\n[ <\u0130kinci Dereceden Denklem> ]
CenterView=MerkezGörünüm
CenterView.Syntax=[ <Merkez Nokta> ]
Centroid=A\u011f\u0131rl\u0131kMerkezi
Centroid.Syntax=[ <Çokgen> ]
Checkbox=\u0130\u015faretKutusu
Checkbox.Syntax=[ ]\n[ <Ba\u015fl\u0131k> ]\n[ <Liste> ]\n[ <Ba\u015fl\u0131k>, <Liste> ]
ChiSquared=KiKare
ChiSquared.Syntax=[ <Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]\n[ <Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
ChiSquared.SyntaxCAS=[ <Serbestlik Derecesi>, <De\u011fi\u015fken> ]
ChiSquaredTest=KiKareTesti
ChiSquaredTest.Syntax=[ <Matris> ]\n[ <Liste>, <Liste> ]\n[ <Matris>, <Matris> ]
Circle=Çember
Circle.Syntax=[ <Nokta>, <Say\u0131 Yar\u0131çap> ]\n[ <Nokta>, <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Nokta> ]
Circle.Syntax3D=[ <Nokta>, <Say\u0131 Yar\u0131çap> ]\n[ <Nokta>, <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Nokta> ]\n[ <Do\u011fru>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Yar\u0131çap>, <Yön> ]\n[ <Nokta>, <Nokta>, <Yön> ]
CircleArc=ÇemberYay\u0131
CircleArc.Syntax=[ <Merkez Nokta>, <Nokta>, <Nokta> ]
CircleSector=DaireDilimi
CircleSector.Syntax=[ <Merkez Nokta>, <Nokta>, <Nokta> ]
CircumcircleArc=ÇevrelÇemberYay\u0131
CircumcircleArc.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
CircumcircleSector=ÇevrelDaireDilimi
CircumcircleSector.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
Circumference=Çevre
Circumference.Syntax=[ <Konik> ]
Classes=Aral\u0131klar
Classes.Syntax=[ <Veri Listesi>, <Aral\u0131k Say\u0131s\u0131> ]\n[ <Veri Listesi>, <Ba\u015flang\u0131ç>, <Aral\u0131k Geni\u015fli\u011fi> ]
ClosestPoint=EnYak\u0131nNokta
ClosestPoint.Syntax=[ <Yol>, <Nokta> ]\n[ <Do\u011fru>, <Do\u011fru> ]
ClosestPointRegion=BölgeEnYak\u0131nNokta
ClosestPointRegion.Syntax=[ <Bölge>, <Nokta> ]
Coefficients=Katsay\u0131lar
Coefficients.Syntax=[ <Polinom> ]\n[ <Konik> ]
Coefficients.SyntaxCAS=[ <Polinom> ]\n[ <Polinom>, <De\u011fi\u015fken> ]
Column=Sütun
Column.Syntax=[ <Hesap Tablosu Hücre> ]
ColumnName=SütunAd\u0131
ColumnName.Syntax=[ <Hesap Tablosu Hücre> ]
Command=Komut
CommonDenominator=OrtakPayda
CommonDenominator.Syntax=[ <\u0130fade>, <\u0130fade> ]
CompetitionRank=Rank
CompetitionRank.Syntax=[ <Liste> ]
CompleteSquare=KareyeTamamla
CompleteSquare.Syntax=[ <\u0130kinci Derece Fonksiyon> ]
ComplexRoot=Karma\u015f\u0131kKök
ComplexRoot.Syntax=[ <Polinom> ]
Cone=Koni
Cone.Syntax=[ <Çember>, <Yükseklik> ]\n[ <Nokta>, <Nokta>, <Yar\u0131çap> ]\n[ <Nokta>, <Vektör>, <Aç\u0131> ]
ConeInfinite=SonsuzKoni
ConeInfinite.Syntax=[ <Nokta>, <Vektör>, <Aç\u0131> ]\n[ <Nokta>, <Nokta>, <Aç\u0131> ]\n[ <Nokta>, <Do\u011fru>, <Aç\u0131> ]
Conic=Konik
Conic.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Nokta>, <Nokta> ]\n[ <Say\u0131>, <Say\u0131>, <Say\u0131>, <Say\u0131>, <Say\u0131>, <Say\u0131> ]
ConstructionStep=\u0130n\u015faAd\u0131m\u0131
ConstructionStep.Syntax=[ ]\n[ <Nesne> ]
ContingencyTable=\u0130htimallerTablosu
ContingencyTable.Syntax=[ <Metin Listesi>, <Metin Listesi> ]\n[ <Metin Listesi>, <Metin Listesi>, <Seçenekler> ]\n[ <Ham De\u011ferler Listesi>, <Sütun De\u011ferler Listesi>, <Frekans Tablosu> ]\n[ <Ham De\u011ferler Listesi>, <Sütun De\u011ferler Listesi>, <Frekans Tablosu>, <Seçenekler> ]
ContinuedFraction=SürekliKesirler
ContinuedFraction.Syntax=[ <Say\u0131> ]\n[ <Say\u0131>, <Seviye> ]\n[ <Say\u0131>, <Seviye>, <K\u0131sayol do\u011fru|yanl\u0131\u015f> ]
ConvexHull=D\u0131\u015fbükeyÖrtü
ConvexHull.Syntax=[ <Nokta Listesi> ]
CopyFreeObject=SerbestNesneyiKopyala
CopyFreeObject.Syntax=[ <Nesne> ]
Corner=Kö\u015fede
Corner.Syntax=[ <Kö\u015fe Say\u0131s\u0131> ]\n[ <Resim>, <Kö\u015fe Say\u0131s\u0131> ]\n[ <Metin>, <Kö\u015fe Say\u0131s\u0131> ]\n[ <Grafik Görünüm>, <Kö\u015fe Say\u0131s\u0131> ]
CountIf=E\u011ferSay
CountIf.Syntax=[ <\u015eart>, <Liste> ]\n[ <\u015eart>, <De\u011fi\u015fken>, <Liste> ]
Covariance=Kovaryans
Covariance.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
Cross=VektörelÇarp\u0131m
Cross.Syntax=[ <Vektör>, <Vektör> ]
CrossRatio=KartezyenOran
CrossRatio.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Nokta> ]
Cube=Küp
Cube.Syntax=[ <Kare> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Cubic=Kübik
Cubic.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Say\u0131> ]
Curvature=E\u011frilik
Curvature.Syntax=[ <Nokta>, <Nesne> ]
CurvatureVector=E\u011frilikVektörü
CurvatureVector.Syntax=[ <Nokta>, <Nesne> ]
CurveCartesian=E\u011fri
CurveCartesian.Syntax=[ <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
CurveCartesian.Syntax3D=[ <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]\n[ <\u0130fade>, <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
Cylinder=Silindir
Cylinder.Syntax=[ <Çember>, <Yükseklik> ]\n[ <Nokta>, <Nokta>, <Yar\u0131çap> ]
CylinderInfinite=SonsuzSilindir
CylinderInfinite.Syntax=[ <Do\u011fru>, <Yar\u0131çap> ]\n[ <Nokta>, <Vektör>, <Yar\u0131çap> ]\n[ <Nokta>, <Nokta>, <Yar\u0131çap> ]
DataFunction=VeriFonksiyonu
DataFunction.Syntax=[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
Defined=Tan\u0131ml\u0131M\u0131
Defined.Syntax=[ <Nesne> ]
Degree=Derece
Degree.Syntax=[ <Polinom> ]
Degree.SyntaxCAS=[ <Polinom> ]\n[ <Polinom>, <De\u011fi\u015fken> ]
DelauneyTriangulation=DelaunayÜçgenlemesi
DelauneyTriangulation.Syntax=[ <Nokta Listesi> ]
Delete=Sil
Delete.Syntax=[ <Nesne> ]
Denominator=Payda
Denominator.Syntax=[ <Say\u0131> ]\n[ <Fonksiyon> ]
Denominator.SyntaxCAS=[ <\u0130fade> ]
DensityPlot=Yo\u011funlukÇizim
Derivative=Türev
Derivative.Syntax=[ <Fonksiyon> ]\n[ <E\u011fri> ]\n[ <Fonksiyon>, <Say\u0131> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]\n[ <E\u011fri>, <Say\u0131> ]\n[ <Fonksiyon>, <De\u011fi\u015fken>, <Say\u0131> ]
Derivative.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Say\u0131> ]
Determinant.Syntax=[ <Matris> ]
Diameter=E\u015flenikÇap
Diameter.Syntax=[ <Vektör>, <Konik> ]\n[ <Do\u011fru>, <Konik> ]
Difference=Fark
Difference.Syntax=[ <Çokgen>, <Çokgen> ]
Dilate=Geni\u015flet
Dilate.Syntax=[ <Nesne>, <Geni\u015fletme Katsay\u0131s\u0131> ]\n[ <Nesne>, <Geni\u015fletme Katsay\u0131s\u0131>, <Geni\u015fletme Merkez Noktas\u0131> ]
Dimension=Boyut
Dimension.Syntax=[ <Nesne> ]
Direction=Yön
Direction.Syntax=[ <Do\u011fru> ]
Directrix=Do\u011frultman
Directrix.Syntax=[ <Konik> ]
Distance=Uzakl\u0131k
Distance.Syntax=[ <Nokta>, <Nesne> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Düzlem>, <Düzlem> ]
Div=Bölüm
Div.Syntax=[ <Bölünen Say\u0131>, <Bölen Say\u0131> ]\n[ <Bölünen Polinom>, <Bölen Polinom> ]
Division=Bölme
Division.Syntax=[ <Bölünen Say\u0131>, <Bölen Say\u0131> ]\n[ <Bölünen Polinom>, <Bölen Polinom> ]
Divisors=Bölenler
Divisors.Syntax=[ <Say\u0131> ]
DivisorsList=BölenlerListesi
DivisorsList.Syntax=[ <Say\u0131> ]
DivisorsSum=BölenlerToplam\u0131
DivisorsSum.Syntax=[ <Say\u0131> ]
Dodecahedron=OnikiYüzlü
Dodecahedron.Syntax=[ <Düzgün Be\u015fgen> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Dot=NoktaÇarp\u0131m
Dot.Syntax=[ <Vektör>, <Vektör> ]
DotPlot=NoktaÇiz
DotPlot.Syntax=[ <Ham Veri Listesi>, <Biti\u015fik Noktalar Y\u0131\u011f\u0131n\u0131 (iste\u011fe ba\u011fl\u0131)>, <Ölçek Faktörü (iste\u011fe ba\u011fl\u0131)> ]
DynamicCoordinates=DinamikKoordinatlar
DynamicCoordinates.Syntax=[ <Nokta>, <x-Koordinat\u0131>, <y-Koordinat\u0131> ]\n[ <Nokta>, <x-Koordinat\u0131>, <y-Koordinat\u0131>, <z-Koordinat\u0131> ]
Eccentricity=D\u0131\u015fmerkezlik
Eccentricity.Syntax=[ <Konik> ]
Eigenvalues=KarakteristikDe\u011ferler
Eigenvalues.SyntaxCAS=[ <Matris> ]
Eigenvectors=KarakteristikVektörler
Eigenvectors.SyntaxCAS=[ <Matris> ]
Element=Ö\u011fe
Element.Syntax=[ <Liste>, <Ö\u011fenin Pozisyonu> ]\n[ <Matris>, <Sat\u0131r>, <Sütun> ]\n[ <Liste>, <\u0130ndeks1>, <\u0130ndeks2>, ... ]
Element.SyntaxCAS=[ <Liste>, <Ö\u011fenin Pozisyonu> ]\n[ <Matris>, <Sat\u0131r>, <Sütun> ]
Eliminate=YokEt
Eliminate.Syntax=[ <Polinom Listesi>, <De\u011fi\u015fken Listesi> ]
Ellipse=Elips
Ellipse.Syntax=[ <Odak>, <Odak>, <Yar\u0131 Asal Eksen Uzunlu\u011fu> ]\n[ <Odak>, <Odak>, <Do\u011fru Parças\u0131> ]\n[ <Odak>, <Odak>, <Nokta> ]
Ends=Biti\u015fler
Ends.Syntax=[ <\u0130kinci Dereceden Denklem> ]
Envelope=Zarf
Envelope.Syntax=[ <Yol>, <Nokta> ]
Erlang.Syntax=[ <\u015eekil>, <Oran>, <De\u011fi\u015fken De\u011feri> ]\n[ <\u015eekil>, <Oran>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <\u015eekil>, <Oran>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Evaluate=Hesapla
Excentricity=Do\u011frusalD\u0131\u015fmerkezlik
Excentricity.Syntax=[ <Konik> ]
Execute=Çal\u0131\u015ft\u0131r
Execute.Syntax=[ <Metin Listesi> ]\n[ <Metin Listesi>, <Parametre>, <Parametre>, ... ]
Expand=\u0130fadeyiAç
Expand.Syntax=[ <\u0130fade> ]
Exponential=Üstel
Exponential.Syntax=[ <Lamda>, <De\u011fi\u015fken De\u011feri> ]\n[ <Lamda>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Lamda>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Exponential.SyntaxCAS=[ <Lamda>, <De\u011fi\u015fken De\u011feri> ]
ExportImage=ResimAl
ExportImage.Syntax=[ <Özellik>, <De\u011fer>, <Özellik>, <De\u011fer>, ... ]
Extremum=UçNokta
Extremum.Syntax=[ <Polinom> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
FDistribution=FDa\u011f\u0131l\u0131m\u0131
FDistribution.Syntax=[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]\n[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
FDistribution.SyntaxCAS=[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
Factor=Çarpanlar\u0131naAy\u0131r
Factor.Syntax=[ <Polinom> ]
Factor.SyntaxCAS=[ <Say\u0131> ]\n[ <Polinom> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]
Factors=Çarpanlar
Factors.Syntax=[ <Polinom> ]\n[ <Say\u0131> ]
FillCells=DoldurHücre
FillCells.Syntax=[ <HücreAral\u0131\u011f\u0131>, <Nesne> ]\n[ <Hücre>, <Liste> ]\n[ <Hücre>, <Matris> ]
FillColumn=DoldurSütun
FillColumn.Syntax=[ <Sütun>, <Liste> ]
FillRow=DoldurSat\u0131r
FillRow.Syntax=[ <Sat\u0131r>, <Liste> ]
First=\u0130lk
First.Syntax=[ <Liste> ]\n[ <Metin> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]\n[ <Metin>, <Ö\u011fe Say\u0131s\u0131> ]\n[ <Geometrik Yer>, <Ö\u011fe Say\u0131s\u0131> ]
First.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]
FirstAxis=AsalEksen
FirstAxis.Syntax=[ <Konik> ]
FirstAxisLength=Yar\u0131AsalEksenUzunlu\u011fu
FirstAxisLength.Syntax=[ <Konik> ]
Fit=Uydur
Fit.Syntax=[ <Nokta Listesi>, <Fonksiyon Listesi> ]\n[ <Nokta Listesi>, <Fonksiyon> ]
FitExp=UydurÜstel
FitExp.Syntax=[ <Nokta Listesi> ]
FitGrowth=UydurBüyüme
FitGrowth.Syntax=[ <Nokta Listesi> ]
FitImplicit=UydurKapal\u0131
FitImplicit.Syntax=[ <Nokta Listesi>, <Mertebe> ]
FitLineX=UydurDo\u011fruX
FitLineX.Syntax=[ <Nokta Listesi> ]
FitLineY=UydurDo\u011fru
FitLineY.Syntax=[ <Nokta Listesi> ]
FitLog=UydurLog
FitLog.Syntax=[ <Nokta Listesi> ]
FitLogistic=UydurLojistik
FitLogistic.Syntax=[ <Nokta Listesi> ]
FitPoly=UydurPolinom
FitPoly.Syntax=[ <Nokta Listesi>, <Polinom Derecesi> ]\n[ <Taslak Fonksiyon>, <Polinom Derecesi> ]
FitPow=UydurKuvvet
FitPow.Syntax=[ <Nokta Listesi> ]
FitSin=UydurSin
FitSin.Syntax=[ <Nokta Listesi> ]
Flatten=TekListeYap
Flatten.Syntax=[ <Liste> ]
Focus=Odak
Focus.Syntax=[ <Konik> ]
FractionText=KesirliGösterim
FractionText.Syntax=[ <Say\u0131> ]\n[ <Nokta> ]
Frequency=Frekans
Frequency.Syntax=[ <Ham Veri Listesi> ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Ham Veri Listesi> ]\n[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n[ <Metin Listesi>, <Metin Listesi> ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kulan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k  S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kulan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]
FrequencyPolygon=FrekansÇokgeni
FrequencyPolygon.Syntax=[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan\u0131m -Mant\u0131ksal>, <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan\u0131m -Mant\u0131ksal>, <Yo\u011funluk Ölçek Faktörü> (opsiyonell) ]
FrequencyTable=FrekansTablosu
FrequencyTable.Syntax=[ <Ham Veri Listesi>, <Ölçek Faktörü (iste\u011fe ba\u011fl\u0131)> ]\n[ <Boole Birikimi>, <Ham Veri Listesi> ]\n[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n[ <Boole Birikimi>, <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk kullan>, <Yo\u011funluk Ölçek Faktörü (iste\u011fe ba\u011fl\u0131)> ]\n[ <Boole Birikimi>, <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk kullan>, <Yo\u011funluk Ölçek Faktörü (iste\u011fe ba\u011fl\u0131)> ]
FromBase=Taban\u0131ndan
FromBase.Syntax=[ "<Metin olarak Say\u0131>", <Taban> ]
Function=Fonksiyon
Function.Syntax=[ <Say\u0131 Listesi> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Function.Syntax3D=[ <Say\u0131 Listesi> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <\u0130fade>, <Parametre De\u011fi\u015fken 1>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Parametre De\u011fi\u015fken 2>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
Function.SyntaxCAS=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
FutureValue=GelecekDe\u011fer
FutureValue.Syntax=[ <Faiz Oran\u0131>, <Dönem Say\u0131s\u0131>, <Ödeme>, <\u015eimdiki De\u011fer (iste\u011fe ba\u011fl\u0131)>, <Tür (iste\u011fe ba\u011fl\u0131)> ]
GCD=EBOB
GCD.Syntax=[ <Say\u0131 Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]
GCD.SyntaxCAS=[ <Say\u0131 Listesi> ]\n[ <Polinom Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Polinom>, <Polinom> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <De\u011fi\u015fken De\u011feri> ]\n[ <Alfa>, <Beta>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Alfa>, <Beta>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <De\u011fi\u015fken De\u011feri> ]
GeometricMean=GeometrikOrtalama
GeometricMean.Syntax=[ <Say\u0131 Listesi> ]
GetTime=ZamanGöster
GetTime.Syntax=[ ]\n[ "<Biçim>" ]
GroebnerDegRevLex.Syntax=[ <Polinom Listesi> ]\n[ <Polinom Listesi>, <De\u011fi\u015fken Listesi> ]
GroebnerLex.Syntax=[ <Polinom Listesi> ]\n[ <Polinom Listesi>, <De\u011fi\u015fken Listesi> ]
GroebnerLexDeg.Syntax=[ <Polinom Listesi> ]\n[ <Polinom Listesi>, <De\u011fi\u015fken Listesi> ]
HarmonicMean=HarmonikOrtalama
HarmonicMean.Syntax=[ <Say\u0131 Listesi> ]
Height=Yükseklik
Height.Syntax=[ <Kat\u0131 Cisim> ]
HideLayer=GizleKatman
HideLayer.Syntax=[ <Say\u0131> ]
Histogram.Syntax=[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n[ <Mant\u0131ksal- Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]
HistogramRight=HistogramSa\u011f
HistogramRight.Syntax=[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]\n[ <Mant\u0131ksal- Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]
HyperGeometric=HiperGeometri
HyperGeometric.Syntax=[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü> ]\n[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
HyperGeometric.SyntaxCAS=[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal-Y\u0131\u011f\u0131lma> ]
Hyperbola=Hiperbol
Hyperbola.Syntax=[ <Odak>, <Odak>, <Yar\u0131 Asal Eksen Uzunlu\u011fu> ]\n[ <Odak>, <Odak>, <Do\u011fru Parças\u0131> ]\n[ <Odak>, <Odak>, <Nokta> ]
IFactor=\u0130Çarpanlar\u0131naAy\u0131r
IFactor.Syntax=[ <Polinom> ]
IFactor.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]
Icosahedron=YirmiYüzlü
Icosahedron.Syntax=[ <E\u015fkenar Üçgen> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Identity=Birim
Identity.Syntax=[ <Say\u0131> ]
If=E\u011fer
If.Syntax=[ <\u015eart>, <Do\u011fruysa> ]\n[ <\u015eart>, <Do\u011fruysa>, <Do\u011fru De\u011filse> ]
ImplicitCurve=Kapal\u0131E\u011fri
ImplicitCurve.Syntax=[ <Noktalar Listesi> ]\n[ <f(x, y)> ]
ImplicitDerivative=Kapal\u0131Türev
ImplicitDerivative.Syntax=[ <f(x y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x y)> ]\n[ <\u0130fade>, <Ba\u011f\u0131ml\u0131 De\u011fi\u015fken>, <Ba\u011f\u0131ms\u0131z De\u011fi\u015fken> ]
Incircle=\u0130çÇember
Incircle.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
IndexOf=Endeksi
IndexOf.Syntax=[ <Nesne>, <Liste> ]\n[ <Metin>, <Metin> ]\n[ <Nesne>, <Liste>, <Ba\u015flang\u0131ç Endeksi> ]\n[ <Metin>, <Metin>, <Ba\u015flang\u0131ç Endeksi> ]
Insert=ArayaSok
Insert.Syntax=[ <Liste>, <Liste>, <Yer> ]\n[ <Nesne>, <Liste>, <Yer> ]
Integral=\u0130ntegral
Integral.Syntax=[ <Fonksiyon> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Mant\u0131ksal De\u011ferlendirme> ]
Integral.SyntaxCAS=[ <Fonksion> ]\n[ <Fonksion>, <De\u011fi\u015fken> ]\n[ <Fonksion>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksion>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
IntegralBetween=\u0130ntegralAras\u0131nda
IntegralBetween.Syntax=[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Mant\u0131ksal De\u011fer bulma> ]
IntegralBetween.SyntaxCAS=[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksiyon>, <Fonksiyon>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
IntegralSymbolic=\u0130ntegralSembolik
IntegralSymbolic.Syntax=[ <Fonksiyon> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]
InteriorAngles=\u0130çAç\u0131lar
InteriorAngles.Syntax=[ <Çokgen> ]
Intersect=Kesi\u015ftir
Intersect.Syntax=[ <Nesne>, <Nesne> ]\n[ <Nesne>, <Nesne>, <Kesi\u015fim Noktas\u0131 \u0130ndeksi> ]\n[ <Nesne>, <Nesne>, <Ba\u015flang\u0131ç Noktas\u0131> ]\n[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç-x De\u011feri>, <Biti\u015f-x De\u011feri> ]\n[ <E\u011fri 1>, <E\u011fri 2>, <Parametre 1>, <Parametre 2> ]
Intersect.SyntaxCAS=[ <Fonksiyon>, <Fonksiyon> ]
IntersectConic=Kesi\u015ftirKonik
IntersectConic.Syntax=[ <Düzlem>, <Kuadrik> ]\n[ <Kuadrik>, <Kuadrik> ]
IntersectPath=Kesi\u015ftirYol
IntersectPath.Syntax=[ <Do\u011fru>, <Çokgen> ]\n[ <Çokgen>, <Çokgen> ]
IntersectPath.Syntax3D=[ <Do\u011fru>, <Çokgen> ]\n[ <Çokgen>, <Çokgen> ]\n[ <Düzlem>, <Çokgen> ]\n[ <Düzlem>, <Kuadrik> ]
Intersection=Kesi\u015fim
Intersection.Syntax=[ <Liste>, <Liste> ]
InverseBinomial=TersBinom
InverseBinomial.Syntax=[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <Olas\u0131l\u0131k> ]
InverseCauchy=TersCauchy
InverseCauchy.Syntax=[ <Medyan>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseChiSquared=TersKiKare
InverseChiSquared.Syntax=[ <Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseExponential=TersÜstel
InverseExponential.Syntax=[ <Lamda>, <Olas\u0131l\u0131k> ]
InverseFDistribution=TersFDa\u011f\u0131l\u0131m\u0131
InverseFDistribution.Syntax=[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseGamma=TersGama
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Olas\u0131l\u0131k> ]
InverseHyperGeometric=TersHiperGeometrik
InverseHyperGeometric.Syntax=[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131 Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <Olas\u0131l\u0131k> ]
InverseLaplace=TersLaplace
InverseLaplace.Syntax=[ <Fonksiyon> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]\n[ <Fonksiyon>, <De\u011fi\u015fken>, <De\u011fi\u015fken> ]
InverseLogNormal=TersLogNormal
InverseLogNormal.Syntax=[ <Ortalama>, <Standart Sapma>, <Olas\u0131l\u0131k> ]
InverseLogistic=TersLojistik
InverseLogistic.Syntax=[ <Ortalama>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseNormal=TersNormal
InverseNormal.Syntax=[ <Ortalama>, <Standard Sapma>, <Olas\u0131l\u0131k> ]
InversePascal=TersPascal
InversePascal.Syntax=[ <n>, <p>, <Olas\u0131l\u0131k> ]
InversePoisson=TersPoisson
InversePoisson.Syntax=[ <Ortalama>, <Olas\u0131l\u0131k> ]
InverseTDistribution=TersTDa\u011f\u0131l\u0131m\u0131
InverseTDistribution.Syntax=[ <Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseWeibull=TersWeibull
InverseWeibull.Syntax=[ <\u015eekil>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseZipf=TersZipf
InverseZipf.Syntax=[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <Olas\u0131l\u0131k> ]
Invert=TersiniAl
Invert.Syntax=[ <Matris> ]\n[ <Fonksiyon> ]
IsInRegion=BölgedeMi
IsInRegion.Syntax=[ <Nokta>, <Bölge> ]
IsInteger=Tamsay\u0131M\u0131
IsInteger.Syntax=[ <Say\u0131> ]
IsPrime=AsalM\u0131
IsPrime.Syntax=[ <Say\u0131> ]
IsTangent=Te\u011fetMi
IsTangent.Syntax=[ <Do\u011fru>, <Konik> ]
IsVertexForm=TepeNoktas\u0131FormundaM\u0131
IsVertexForm.Syntax=[ <Fonksiyon> ]
Iteration=Döngü
Iteration.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç De\u011feri>, <Döngü Say\u0131s\u0131> ]\n[ <\u0130fade>, <De\u011fi\u015fkenler>, <Ba\u015flang\u0131ç De\u011ferleri>, <Sayaç> ]
IterationList=DöngüListesi
IterationList.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç De\u011feri>, <Döngü Say\u0131s\u0131> ]\n[ <Fonksiyon>, <De\u011fi\u015fkenler>, <Ba\u015flang\u0131ç De\u011ferleri>, <Sayaç> ]
Join=Birle\u015ftir
Join.Syntax=[ <Liste Listesi> ]\n[ <Liste>, <Liste>, ... ]
JordanDiagonalization=JordanKö\u015fegenle\u015ftirme
JordanDiagonalization.SyntaxCAS=[ <Matris> ]
KeepIf=E\u011ferTut
KeepIf.Syntax=[ <\u015eart>, <Liste> ]\n[ <\u015eart>, <De\u011fi\u015fken>, <Liste> ]
LCM=EKOK
LCM.Syntax=[ <Say\u0131 Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]
LCM.SyntaxCAS=[ <Say\u0131 Listesi> ]\n[ <Polinom Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Polinom>, <Polinom> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Nesne> ]\n[ <Nesne>, <De\u011fi\u015fkenlerin de\u011fi\u015ftirilmesi için do\u011fru yanl\u0131\u015f s\u0131nama de\u011feri> ]
Laplace.Syntax=[ <Fonksiyon> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]\n[ <Fonksiyon>, <De\u011fi\u015fken>, <De\u011fi\u015fken> ]
Last=Son
Last.Syntax=[ <Liste> ]\n[ <Metin> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]\n[ <Metin>, <Ö\u011fe Say\u0131s\u0131> ]
Last.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]
LeftSide=SolTaraf
LeftSide.Syntax=[ <Denklem> ]
LeftSide.SyntaxCAS=[ <Denklem> ]\n[ <Denklem Listesi> ]\n[ <Denklem Listesi>, <\u0130ndis> ]
LeftSum=SolToplam
LeftSum.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131> ]
Length=Uzunluk
Length.Syntax=[ <Nesne> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç-x De\u011feri>, <Biti\u015f-x De\u011feri> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f Noktas\u0131> ]\n[ <E\u011fri>, <Ba\u015flang\u0131ç t-De\u011feri>, <Biti\u015f t-De\u011feri> ]\n[ <E\u011fri>, <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f Noktas\u0131> ]
Length.SyntaxCAS=[ <Liste> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç-x De\u011feri>, <Biti\u015f-x De\u011feri> ]\n[ <Fonksiyon>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç-x De\u011feri>, <Biti\u015f-x De\u011feri> ]
LetterToUnicode=HarfdenUniCode
LetterToUnicode.Syntax=[ "<Harf>" ]
Limit.Syntax=[ <Fonksiyon>, <Say\u0131> ]
Limit.SyntaxCAS=[ <\u0130fade>, <De\u011fer> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
LimitAbove=LimitSa\u011fdan
LimitAbove.Syntax=[ <Fonksiyon>, <De\u011fer> ]
LimitAbove.SyntaxCAS=[ <\u0130fade>, <De\u011fer> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
LimitBelow=LimitSoldan
LimitBelow.Syntax=[ <Fonksiyon>, <De\u011fer> ]
LimitBelow.SyntaxCAS=[ <\u0130fade>, <De\u011fer> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
Line=Do\u011fru
Line.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Paralel Do\u011fru> ]\n[ <Nokta>, <Do\u011frultman Vektörü> ]
LineBisector=OrtaDikme
LineBisector.Syntax=[ <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Nokta> ]
LineBisector.Syntax3D=[ <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
LineGraph=ÇizgiGrafi\u011fi
LineGraph.Syntax=[ <x-koordinat\u0131 listesi>, <y-koordinat\u0131 listesi> ]
Locus=GeometrikYer
Locus.Syntax=[ <Geometrik Yer Çizgisini Olu\u015fturan Nokta>, <Nokta> ]\n[ <Geometrik Yer Çizgisini Olu\u015fturan Nokta>, <Sürgü> ]\n[ <E\u011fim Alan\u0131>, <Nokta> ]\n[ <f(x y)>, <Nokta> ]
LocusEquation=GeometrikYerDenklemi
LocusEquation.Syntax=[ <Geometrik Yer> ]\n[ <Geometrik Yer Noktas\u0131>, <Hareket eden Nokta> ]\n[ <Mant\u0131ksal \u0130fade>, <Serbest Nokta> ]
LogNormal.Syntax=[ <Ortalama>, <Standart Sapma>, <De\u011fi\u015fken De\u011feri> ]\n[ <Ortalama>, <Standart Sapma>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Logistic=Lojistik
Logistic.Syntax=[ <Ortalama>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]\n[ <Ortalama>, <Ölçek>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Ortalama>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
LowerSum=AltToplam
LowerSum.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131> ]
MAD=OMS
MAD.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
MatrixPlot=MatrisÇizim
MatrixRank=MatrisRank
MatrixRank.Syntax=[ <Matris> ]
Max=EnBüyük
Max.Syntax=[ <Aral\u0131k> ]\n[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Veri Listesi>, <Frekans Listesi> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Max.SyntaxCAS=[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]
Maximize=EnBüyü\u011fünüAl
Maximize.Syntax=[ <Ba\u011f\u0131ml\u0131 Say\u0131>, <Serbest Say\u0131> ]\n[ <Ba\u011f\u0131ml\u0131 Say\u0131>, <Yörüngedeki Nokta> ]
Mean=Ortalama
Mean.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Mean.SyntaxCAS=[ <Say\u0131 Listesi> ]
MeanX=OrtalamaX
MeanX.Syntax=[ <Nokta Listesi> ]
MeanY=OrtalamaY
MeanY.Syntax=[ <Nokta Listesi> ]
Median=Medyan
Median.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Median.SyntaxCAS=[ <Say\u0131 Listesi> ]
Midpoint=OrtaNokta
Midpoint.Syntax=[ <Do\u011fru Parças\u0131> ]\n[ <Konik> ]\n[ <Aral\u0131k> ]\n[ <Nokta>, <Nokta> ]
Min=EnKüçük
Min.Syntax=[ <Aral\u0131k> ]\n[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Veri Listesi>, <Frekans Listesi> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Min.SyntaxCAS=[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]
Minimize=EnKüçü\u011fünüAl
Minimize.Syntax=[ <Ba\u011f\u0131ml\u0131 Say\u0131>, <Serbest Say\u0131> ]\n[ <Ba\u011f\u0131ml\u0131 Say\u0131>, <Yörüngedeki Nokta> ]
MinimumSpanningTree=EnKüçükDolanmaA\u011fac\u0131
MinimumSpanningTree.Syntax=[ <Nokta Listesi> ]
Mirror=Yans\u0131t
Mirror.Syntax=[ <Nesne>, <Nokta> ]\n[ <Nesne>, <Do\u011fru> ]\n[ <Nesne>, <Çember> ]
Mirror.Syntax3D=[ <Nesne>, <Nokta> ]\n[ <Nesne>, <Do\u011fru> ]\n[ <Nesne>, <Düzlem> ]\n[ <Nesne>, <Çember> ]
MixedNumber=TamKesir
MixedNumber.SyntaxCAS=[ <Say\u0131> ]
Mod=Kalan
Mod.Syntax=[ <Bölünen Say\u0131>, <Bölen Say\u0131> ]\n[ <Bölünen Polinom>, <Bölen Polinom> ]
Mode=Mod
Mode.Syntax=[ <Say\u0131 Listesi> ]
NDerivative=STürev
NDerivative.Syntax=[ <Fonksiyon> ]\n[ <Fonksiyon>, <Derece> ]
NIntegral=S\u0130ntegral
NIntegral.Syntax=[ <Fonksiyon> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
NIntegral.SyntaxCAS=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksiyon>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
NInvert=NTersiniAl
NInvert.Syntax=[ <Fonksiyon> ]
NSolutions=SÇözümler
NSolutions.Syntax=[ <Denklem> ]
NSolutions.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]\n[ <Denklem>, <De\u011fi\u015fken=ba\u015flang\u0131ç de\u011feri> ]\n[ <Denklem Listesi>, <De\u011fi\u015fken listesi> ]
NSolve=SÇöz
NSolve.Syntax=[ <Denklem> ]
NSolve.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]\n[ <Denklem>, <De\u011fi\u015fken=ba\u015flang\u0131ç de\u011feri> ]\n[ <Denklem Listesi>, <De\u011fi\u015fken listesi> ]
NSolveODE=SÇözADD
NSolveODE.Syntax=[ <Türev Listesi>, <Ba\u015flang\u0131ç x-koordinat\u0131>, <Ba\u015flang\u0131ç y-koordinat listesi>, <Son x-koordinat\u0131> ]
Name=Ad
Name.Syntax=[ <Nesne> ]
Net=DüzlemeAç
Net.Syntax=[ <Çokyüzlü>, <Say\u0131> ]\n[ <Çokyüzlü>, <Say\u0131>, <Yüz>, <Ayr\u0131t>, <Ayr\u0131t>, ... ]
NextPrime=SonrakiAsal
NextPrime.Syntax=[ <Say\u0131> ]
Normal.Syntax=[ <Ortalama>, <Standard Sapma>, <De\u011fi\u015fken De\u011feri> ]\n[ <Ortalama>, <Standard Sapma>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Ortalama>, <Standard Sapma>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Normal.SyntaxCAS=[ <Ortalama>, <Standart Sapma>, <De\u011fi\u015fken De\u011feri> ]
NormalQuantilePlot=NormalDa\u011f\u0131l\u0131mÇizimi
NormalQuantilePlot.Syntax=[ <Ham Veri Listesi> ]
Normalize=Normalle\u015ftir
Normalize.Syntax=[ <Say\u0131 Listesi> ]\n[ <Nokta Listesi> ]
Numerator=Pay
Numerator.Syntax=[ <Say\u0131> ]\n[ <Fonksiyon> ]
Numerator.SyntaxCAS=[ <\u0130fade> ]
Numeric=Say\u0131sal
Numeric.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <Önemli Basamak Say\u0131s\u0131> ]
Object=Nesne
Object.Syntax=[ <Nesnenin Metin olarak Ad\u0131> ]
Octahedron=SekizYüzlü
Octahedron.Syntax=[ <E\u015fkenar Üçgen> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Ordinal=S\u0131rasal
Ordinal.Syntax=[ <Tamsay\u0131> ]
OrdinalRank=S\u0131rasalRank
OrdinalRank.Syntax=[ <Liste> ]
OrthogonalLine=DikDo\u011fru
OrthogonalLine.Syntax=[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Vektör> ]
OrthogonalLine.Syntax3D=[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Vektör> ]\n[ <Nokta>, <Düzlem> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Do\u011frultu>, <Do\u011frultu> ]\n[ <Nokta>, <Do\u011fru>, <Ba\u011flam> ]
OrthogonalPlane=DikDüzlem
OrthogonalPlane.Syntax=[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Vektör> ]
OrthogonalVector=DikVektör
OrthogonalVector.Syntax=[ <Do\u011fru> ]\n[ <Do\u011fru Parças\u0131> ]\n[ <Vektör> ]
OrthogonalVector.Syntax3D=[ <Do\u011fru> ]\n[ <Do\u011fru Parças\u0131> ]\n[ <Vektör> ]\n[ <Düzlem> ]
OrthogonalVector.SyntaxCAS=[ <Vektör> ]
OsculatingCircle=DokunumÇemberi
OsculatingCircle.Syntax=[ <Nokta>, <Nesne> ]
PMCC=KorelasyonKatsay\u0131s\u0131
PMCC.Syntax=[ <Nokta Listesi> ]\n[ <x Koordinat Listesi>, <y Koordinat Listesi> ]
Pan=Kayd\u0131r
Parabola=Parabol
Parabola.Syntax=[ <Nokta>, <Do\u011fru> ]
Parameter=Parametre
Parameter.Syntax=[ <Parabol> ]
ParametricDerivative=ParametrikTürev
ParametricDerivative.Syntax=[ <E\u011fri> ]
ParseToFunction=FonksiyonaDöndür
ParseToFunction.Syntax=[ <Fonksiyon>, <Metin> ]
ParseToNumber=Say\u0131yaDöndür
ParseToNumber.Syntax=[ <Say\u0131>, <Metin> ]
PartialFractions=K\u0131smiKesirler
PartialFractions.Syntax=[ <Fonksiyon> ]
PartialFractions.SyntaxCAS=[ <Fonksiyon> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <n>, <p>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Pascal.SyntaxCAS=[ <n>, <p>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
PathParameter=YolParametresi
PathParameter.Syntax=[ <Yoldaki Nokta> ]
Payment=Ödeme
Payment.Syntax=[ <Faiz Oran\u0131>, <Dönem Say\u0131s\u0131>, <\u015eimdiki De\u011fer>, <Gelecek De\u011fer (iste\u011fe ba\u011fl\u0131)>, <Tür (iste\u011fe ba\u011fl\u0131)> ]
Percentile=Yüzdelik
Percentile.Syntax=[ <Say\u0131 Listesi>, <Yüzde> ]
Perimeter=ÇevreUzunlu\u011fu
Perimeter.Syntax=[ <Çokgen> ]\n[ <Konik> ]\n[ <Geometrik yer> ]
Periods=Dönemler
Periods.Syntax=[ <Faiz Oran\u0131>, <Ödeme>, <\u015eimdiki De\u011fer>, <Gelecek De\u011fer(iste\u011fe ba\u011fl\u0131)>, <Tip (iste\u011fe ba\u011fl\u0131)> ]
Plane=Düzlem
Plane.Syntax=[ <Çokgen> ]\n[ <Konik> ]\n[ <Nokta>, <Düzlem> ]\n[ <Nokta>, <Do\u011fru> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Nokta>, <Nokta> ]
PlaneBisector=OrtaDikDüzlem
PlaneBisector.Syntax=[ <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Nokta> ]
PlaySound=SesÇal
PlaySound.Syntax=[ <URL> ]\n[ <Mant\u0131ksal Çal> ]\n[ <Fonksiyon>, <Min De\u011fer>, <Max De\u011fer> ]\n[ <Fonksiyon>, <Min De\u011fer>, <Max De\u011fer>, <Örnek H\u0131z>, <Örnek Derinlik> ]
PlotSolve=ÇözÇiz
PlotSolve.Syntax=[ <x cinsinden denklem> ]
Point=Nokta
Point.Syntax=[ <Nesne> ]\n[ <Liste> ]\n[ <Nesne>, <Parametre> ]\n[ <Nokta>, <Vektör> ]
PointIn=Nokta\u0130çinde
PointIn.Syntax=[ <Bölge> ]
PointList=NoktaListesi
PointList.Syntax=[ <Liste> ]
Poisson.Syntax=[ <Ortalama> ]\n[ <Ortalama>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Ortalama>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Poisson.SyntaxCAS=[ <Ortalama>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Polar=Kutupsal
Polar.Syntax=[ <Nokta>, <Konik> ]\n[ <Do\u011fru>, <Konik> ]
PolyLine=ÇokluDo\u011fru
PolyLine.Syntax=[ <Nokta Listesi> ]\n[ <Nokta>, ..., <Nokta> ]
Polygon=Çokgen
Polygon.Syntax=[ <Nokta Listesi> ]\n[ <Nokta>, ..., <Nokta> ]\n[ <Nokta>, <Nokta>, <Kö\u015fe Say\u0131s\u0131> ]
Polygon.Syntax3D=[ <Nokta Listesi> ]\n[ <Nokta>, ..., <Nokta> ]\n[ <Nokta>, <Nokta>, <Kö\u015fe Say\u0131s\u0131> ]\n[ <Nokta>, <Nokta>, <Kö\u015fe Say\u0131s\u0131>, <Yön> ]
Polynomial=Polinom
Polynomial.Syntax=[ <Fonksiyon> ]\n[ <Nokta Listesi> ]
Polynomial.SyntaxCAS=[ <Fonksiyon> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]
PresentValue=\u015eimdikiDe\u011fer
PresentValue.Syntax=[ <Faiz Oran\u0131>, <Dönem Say\u0131s\u0131>, <Ödeme>, <Gelecek De\u011fer (iste\u011fe ba\u011fl\u0131)>, <Tür (iste\u011fe ba\u011fl\u0131)> ]
PreviousPrime=ÖncekiAsal
PreviousPrime.Syntax=[ <Say\u0131> ]
PrimeFactors=AsalÇarpanlar
PrimeFactors.Syntax=[ <Say\u0131> ]
Prism=Prizma
Prism.Syntax=[ <Çokgen>, <Nokta> ]\n[ <Çokgen>, <Yükseklik de\u011feri> ]\n[ <Nokta>, <Nokta>, ... ]
Product=Çarp\u0131m
Product.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Ö\u011fe Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
Product.SyntaxCAS=[ <\u0130fade Listesi> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç \u0130ndisi>, <Biti\u015f \u0130ndisi> ]
Prove=\u0130spatla
Prove.Syntax=[ <Mant\u0131ksal \u0130fade> ]
ProveDetails=Ayr\u0131nt\u0131l\u0131\u0130spatla
ProveDetails.Syntax=[ <Mant\u0131ksal \u0130fade> ]
Pyramid=Piramit
Pyramid.Syntax=[ <Çokgen>, <Nokta> ]\n[ <Çokgen>, <Yükseklik> ]\n[ <Nokta>, <Nokta>, <Nokta>, <Nokta>, ... ]
Q1=Çeyreklik1
Q1.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Q3=Çeyreklik3
Q3.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
QuadricSide=YanalYüz
QuadricSide.Syntax=[ <\u0130kinci Dereceden> ]
RSquare=RKare
RSquare.Syntax=[ <Nokta Listesi>, <Fonksiyon> ]
Radius=Yar\u0131çap
Radius.Syntax=[ <Konik> ]
Random=RastgeleAras\u0131nda
Random.Syntax=[ <Minimum Tam say\u0131>, <Maksimum Tam say\u0131> ]\n[ <Minimum Tam say\u0131>, <Maksimum Tam say\u0131>, <Mant\u0131ksal Sabit> ]
Random.SyntaxCAS=[ <Minimum Tamsay\u0131>, <Maksimum Tamsay\u0131> ]
RandomBinomial=RastgeleBinom
RandomBinomial.Syntax=[ <Deneme Say\u0131s\u0131>, <Olas\u0131l\u0131k> ]
RandomDiscrete=RastgeleAyr\u0131k
RandomDiscrete.Syntax=[ <Liste>, <Liste> ]
RandomElement=RastgeleÖ\u011fe
RandomElement.Syntax=[ <Liste> ]
RandomNormal=RastgeleNormal
RandomNormal.Syntax=[ <Ortalama>, <Standart Sapma> ]
RandomPointIn=RastgeleNokta\u0130çinde
RandomPointIn.Syntax=[ <Bölge> ]\n[ <Nokta Listesi> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=RastgelePoisson
RandomPoisson.Syntax=[ <Ortalama> ]
RandomPolynomial=RastgelePolinom
RandomPolynomial.Syntax=[ <Derece>, <Katsay\u0131lar için minimum>, <Katsay\u0131lar için maksimum> ]
RandomPolynomial.SyntaxCAS=[ <Derece>, <Katsay\u0131lar için Minimum>, <Katsay\u0131lar için Maksimum> ]\n[ <De\u011fi\u015fken>, <Derece>, <Katsay\u0131lar için Minimum>, <Katsay\u0131lar için Maksimum> ]
RandomUniform=RastgeleTekDüze
RandomUniform.Syntax=[ <Enküçük>, <Enbüyük> ]\n[ <Enküçük>, <Enbüyük>, <Örnek Say\u0131s\u0131> ]
Rate=Faiz
Rate.Syntax=[ <Dönem Say\u0131s\u0131>, <Ödeme>, <\u015eimdiki De\u011fer>, <Gelecek De\u011fer (iste\u011fe ba\u011fl\u0131)>, <Tür (iste\u011fe ba\u011fl\u0131)>, <Tahmin (iste\u011fe ba\u011fl\u0131)> ]
Rationalize=RasyonelYap
Rationalize.SyntaxCAS=[ <Say\u0131> ]
Ray=I\u015f\u0131n
Ray.Syntax=[ <Ba\u015flang\u0131ç Noktas\u0131>, <Nokta> ]\n[ <Ba\u015flang\u0131ç Noktas\u0131>, <Yön Vektörü> ]
ReadText=MetniOku
ReadText.Syntax=[ <Metin> ]
RectangleSum=DikdörtgenToplam
RectangleSum.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131>, <Dikdörtgen ba\u015flang\u0131ç pozisyonu> ]
ReducedRowEchelonForm=\u0130ndirgenmi\u015fSat\u0131rE\u015felonBiçimi
ReducedRowEchelonForm.Syntax=[ <Matris> ]
Relation=\u0130li\u015fki
Relation.Syntax=[ <Liste> ]\n[ <Nesne>, <Nesne> ]
RemovableDiscontinuity=Kald\u0131r\u0131labilirSüreksizlik
RemovableDiscontinuity.Syntax=[ <Fonksiyon> ]
Remove=Kald\u0131r
Remove.Syntax=[ <Liste>, <Liste> ]
RemoveUndefined=Tan\u0131ms\u0131zsaKald\u0131r
RemoveUndefined.Syntax=[ <Liste> ]
Rename=Ad\u0131n\u0131De\u011fi\u015ftir
Rename.Syntax=[ <Nesne>, <Ad> ]
Repeat=Tekrarla
Repeat.Syntax=[ <Say\u0131>, <Betikleme Komutu>, <Betikleme Komutu>, ... ]
ResidualPlot=Art\u0131kÇizim
ResidualPlot.Syntax=[ <Nokta Listesi>, <Fonksiyon> ]
Reverse=TersineHareket
Reverse.Syntax=[ <Liste> ]
RightSide=Sa\u011fTaraf
RightSide.Syntax=[ <Denklem> ]
RightSide.SyntaxCAS=[ <Denklem> ]\n[ <Denklem Listesi> ]\n[ <Denklem Listesi>, <\u0130ndis> ]
RigidPolygon=BükülmezÇokgen
RigidPolygon.Syntax=[ <Çokgen> ]\n[ <Çokgen>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y> ]\n[ <Serbest Nokta>, ..., <Serbest Nokta> ]
Root=Kök
Root.Syntax=[ <Polinom> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Root.SyntaxCAS=[ <Polinom> ]
RootList=KökListesi
RootList.Syntax=[ <Liste> ]
RootMeanSquare=KökOrtalamaKare
RootMeanSquare.Syntax=[ <Say\u0131 Listesi> ]
Roots=Kökler
Roots.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Rotate=Döndür
Rotate.Syntax=[ <Nesne>, <Aç\u0131> ]\n[ <Nesne>, <Aç\u0131>, <Nokta> ]
Rotate.Syntax3D=[ <Nesne>, <Aç\u0131> ]\n[ <Nesne>, <Aç\u0131>, <Nokta> ]\n[ <Nesne>, <Aç\u0131>, <Dönme Ekseni> ]\n[ <Nesne>, <Aç\u0131>, <Eksendeki Nokta>, <Eksen Yönü veya Düzlem> ]
RotateText=DöndürMetin
RotateText.Syntax=[ <Metin>, <Aç\u0131> ]
Row=Sat\u0131r
Row.Syntax=[ <Hesap Tablosu Hücre> ]
RunClickScript=Çal\u0131\u015ft\u0131rT\u0131klamaBeti\u011fi
RunClickScript.Syntax=[ <Nesne> ]
RunUpdateScript=Çal\u0131\u015ft\u0131rGüncellemeBeti\u011fi
RunUpdateScript.Syntax=[ <Nesne> ]
SD=SS
SD.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SDX=SSX
SDX.Syntax=[ <Say\u0131 Listesi> ]
SDY=SSY
SDY.Syntax=[ <Say\u0131 Listesi> ]
SVD.Syntax=[ <Matris> ]
SXX.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi> ]
SXY.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
SYY.Syntax=[ <Nokta Listesi> ]
Sample=Örneklem
Sample.Syntax=[ <Liste>, <Büyüklük> ]\n[ <Liste>, <Büyüklük>, <De\u011fi\u015fiklikler ile> ]
SampleSD=ÖrneklemSS
SampleSD.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SampleSD.SyntaxCAS=[ <Say\u0131 Listesi> ]
SampleSDX=ÖrneklemSSX
SampleSDX.Syntax=[ <Nokta Listesi> ]
SampleSDY=ÖrneklemSSY
SampleSDY.Syntax=[ <Nokta Listesi> ]
SampleVariance=ÖrneklemVaryans
SampleVariance.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SampleVariance.SyntaxCAS=[ <Say\u0131 Listesi> ]
ScientificText=BilimselGösterim
ScientificText.Syntax=[ <Say\u0131> ]\n[ <Say\u0131>, <Duyarl\u0131l\u0131k> ]
SecondAxis=YedekEksen
SecondAxis.Syntax=[ <Konik> ]
SecondAxisLength=Yar\u0131YedekEksenUzunlu\u011fu
SecondAxisLength.Syntax=[ <Konik> ]
Sector=Dilim
Sector.Syntax=[ <Konik>, <Nokta>, <Nokta> ]\n[ <Konik>, <Parametre De\u011feri>, <Parametre De\u011feri> ]
Segment=Do\u011fruParças\u0131
Segment.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Uzunluk> ]
SelectObjects=NesneleriSeç
SelectObjects.Syntax=[ ]\n[ <Nesne>, <Nesne>, ... ]
SelectedElement=SeçiliÖ\u011fe
SelectedElement.Syntax=[ <Liste> ]
SelectedIndex=SeçiliEndeks
SelectedIndex.Syntax=[ <Liste> ]
Semicircle=Yar\u0131Çember
Semicircle.Syntax=[ <Nokta>, <Nokta> ]
Sequence=Dizi
Sequence.Syntax=[ <Biti\u015f De\u011feri> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Art\u0131\u015f> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Art\u0131\u015f> ]
SetActiveView=AyarlaEtkinGörünüm
SetActiveView.Syntax=[ <Görünüm> ]\n[ <Düzlem> ]
SetAxesRatio=AyarlaEksenOran\u0131
SetAxesRatio.Syntax=[ <Say\u0131>, <Say\u0131> ]
SetAxesRatio.Syntax3D=[ <Say\u0131>, <Say\u0131> ]\n[ <Say\u0131>, <Say\u0131>, <Say\u0131> ]
SetBackgroundColor=AyarlaArkaplanRengi
SetBackgroundColor.Syntax=[ "<Renk>" ]\n[ <Nesne>, "<Renk>" ]\n[ <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]\n[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetCaption=AyarlaBa\u015fl\u0131k
SetCaption.Syntax=[ <Nesne>, <Metin> ]
SetColor=AyarlaRenk
SetColor.Syntax=[ <Nesne>, "<Renk>" ]\n[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetConditionToShowObject=AyarlaNesneyiGösterme\u015eart\u0131
SetConditionToShowObject.Syntax=[ <Nesne>, <\u015eart> ]
SetConstructionStep=Ayarla\u0130n\u015faAd\u0131m\u0131
SetConstructionStep.Syntax=[ <Say\u0131> ]
SetCoords=AyarlaKoordinat
SetCoords.Syntax=[ <Nesne>, <x>, <y> ]\n[ <Nesne>, <x>, <y>, <z> ]
SetDecoration=AyarlaSüsleme
SetDecoration.Syntax=[ <Nesne>, <Say\u0131> ]
SetDynamicColor=AyarlaDinamikRenk
SetDynamicColor.Syntax=[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]\n[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi>, <Donukluk> ]
SetFilling=AyarlaDolgu
SetFilling.Syntax=[ <Nesne>, <Say\u0131> ]
SetFixed=AyarlaSabitleme
SetFixed.Syntax=[ <Nesne>, <do\u011fru | yanl\u0131\u015f> ]\n[ <Nesne>, <do\u011fru | yanl\u0131\u015f>, <do\u011fru | yanl\u0131\u015f> ]
SetLabelMode=AyarlaEtiketModu
SetLabelMode.Syntax=[ <Nesne>, <Say\u0131> ]
SetLayer=AyarlaKatman
SetLayer.Syntax=[ <Nesne>, <Katman> ]
SetLevelOfDetail=AyarlaDetaySeviyesi
SetLevelOfDetail.Syntax=[ <Yüzey>, <Detay Düzeyi> ]
SetLineStyle=AyarlaDo\u011fruStili
SetLineStyle.Syntax=[ <Do\u011fru>, <Say\u0131> ]
SetLineThickness=AyarlaDo\u011fruKal\u0131nl\u0131\u011f\u0131
SetLineThickness.Syntax=[ <Do\u011fru>, <Say\u0131> ]
SetPerspective=AyarlaPerspektif
SetPerspective.Syntax=[ <Metin> ]
SetPointSize=AyarlaNoktaBüyüklü\u011fü
SetPointSize.Syntax=[ <Nesne>, <Say\u0131> ]
SetPointStyle=AyarlaNoktaStili
SetPointStyle.Syntax=[ <Nokta>, <Say\u0131> ]
SetSeed=AyarlaTohum
SetSeed.Syntax=[ <Tamsay\u0131> ]
SetSpinSpeed=AyarlaDönü\u015fH\u0131z\u0131
SetSpinSpeed.Syntax=[ <Say\u0131> ]
SetTooltipMode=AyarlaAraç\u0130pucuModu
SetTooltipMode.Syntax=[ <Nesne>, <Say\u0131> ]
SetTrace=Ayarla\u0130z
SetTrace.Syntax=[ <Nesne>, <do\u011fru | yanl\u0131\u015f> ]
SetValue=AyarlaDe\u011fer
SetValue.Syntax=[ <Mant\u0131ksal>, <0|1> ]\n[ <Nesne>, <Nesne> ]\n[ <Liste>, <Say\u0131>, <Nesne> ]
SetViewDirection=AyarlaGörünümYönü
SetViewDirection.Syntax=[ ]\n[ <Yön> ]\n[ <Yön>, <Mant\u0131ksal canland\u0131r> ]
SetVisibleInView=AyarlaGörünebilirlik
SetVisibleInView.Syntax=[ <Nesne>, <Görünüm No 1|2>, <Mant\u0131ksal> ]
Shear=Kayk\u0131l
Shear.Syntax=[ <Nesne>, <Do\u011fru>, <Oran> ]
ShortestDistance=EnK\u0131saMesafe
ShortestDistance.Syntax=[ <Do\u011fru Parçalar\u0131 Liste>, <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f Noktas\u0131>, <Mant\u0131ksal A\u011f\u0131rl\u0131kl\u0131> ]
ShowAxes=GösterEksenler
ShowAxes.Syntax=[ ]\n[ <Mant\u0131ksal> ]\n[ <Görünüm>, <Mant\u0131ksal> ]
ShowGrid=GösterIzgara
ShowGrid.Syntax=[ ]\n[ <Mant\u0131ksal> ]\n[ <Görünüm>, <Mant\u0131ksal> ]
ShowLabel=GösterEtiket
ShowLabel.Syntax=[ <Nesne>, <Mant\u0131ksal> ]
ShowLayer=GösterKatman
ShowLayer.Syntax=[ <Say\u0131> ]
Shuffle=Kar\u0131\u015ft\u0131r
Shuffle.Syntax=[ <Liste> ]
SigmaXX.Syntax=[ <Nokta Listesi> ]\n[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SigmaXY.Syntax=[ <Nokta Listesi> ]\n[ <x-Koordinat Listesi>, <y-Koordinat Listesi> ]
SigmaYY.Syntax=[ <Nokta Listesi> ]
Simplify=Sadele\u015ftir
Simplify.Syntax=[ <Fonksiyon> ]\n[ <Metin> ]
Simplify.SyntaxCAS=[ <Fonksiyon> ]
Slider=Sürgü
Slider.Syntax=[ <En küçük>, <En büyük>, <Art\u0131\u015f>, <H\u0131z>, <Geni\u015flik>, <Aç\u0131 m\u0131>, <Yatay>, <Hareketli>, <Rastgele> ]
Slope=E\u011fim
Slope.Syntax=[ <Do\u011fru> ]
SlopeField=E\u011fimAlan\u0131
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Say\u0131 n> ]\n[ <f(x, y)>, <Say\u0131 n>, <Uzunluk Çarpan a> ]\n[ <f(x, y)>, <Say\u0131 n>, <Uzunluk Çarpan a>, <Min x>, <Min y>, <Maks x>, <Maks y> ]
SlowPlot=Yava\u015fÇizim
SlowPlot.Syntax=[ <Fonksiyon> ]\n[ <Fonksiyon>, <Mant\u0131ksal Tekrar> ]
Solutions=Çözümler
Solutions.Syntax=[ <Denklem> ]
Solutions.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]\n[ <Denklem Listesi>, <De\u011fi\u015fken Listesi> ]
Solve=Çöz
Solve.Syntax=[ <Denklem> ]
Solve.SyntaxCAS=[ <x cinsinden Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]\n[ <Denklem Listesi>, <De\u011fi\u015fken Listesi> ]\n[ <Parametrik Denklem Listesi>, <De\u011fi\u015fken Listesi> ]\n[ <Denklem>, <De\u011fi\u015fken>, <Kabul Listesi> ]
SolveCubic=ÇözKübik
SolveCubic.SyntaxCAS=[ <Üçüncü Dereceden Polinom> ]
SolveODE=ÇözADD
SolveODE.Syntax=[ <f'(x y)> ]\n[ <f'(x y)>, <f üzerindeki Nokta> ]\n[ <f'(x y)>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Biti\u015f x>, <Ad\u0131m> ]\n[ <y'>, <x'>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Biti\u015f t>, <Ad\u0131m> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Ba\u015flang\u0131ç y'>, <Biti\u015f x>, <Ad\u0131m> ]
SolveODE.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <f üzerindeki nokta(lar)> ]\n[ <Denklem>, <f üzerindeki nokta(lar)>, <f' üzerindeki nokta(lar)> ]\n[ <Denklem>, <Ba\u011f\u0131ml\u0131 de\u011fi\u015fken>, <Ba\u011f\u0131ms\u0131z de\u011fi\u015fken>, <f üzerindeki nokta(lar)> ]\n[ <Denklem>, <Ba\u011f\u0131ml\u0131 de\u011fi\u015fken>, <Ba\u011f\u0131ms\u0131z de\u011fi\u015fken>, <f üzerindeki nokta(lar)>, <f' üzerindeki nokta(lar)> ]
SolveQuartic=ÇözKuartik
SolveQuartic.SyntaxCAS=[ <Dördüncü Dereceden Polinom> ]
Sort=S\u0131rala
Sort.Syntax=[ <Liste> ]\n[ <De\u011ferler>, <Anahtarlar> ]
Spearman.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
Sphere=Küre
Sphere.Syntax=[ <Nokta>, <Yar\u0131çap> ]\n[ <Nokta>, <Nokta> ]
Spline=E\u011friUydur
Spline.Syntax=[ <Nokta Listesi> ]\n[ <Nokta Listesi>, <Derece \u2265 3> ]\n[ <Nokta Listesi>, <Derece \u2265 3>, <A\u011f\u0131rl\u0131k Fonksiyonu> ]
StartAnimation=Ba\u015flatCanland\u0131rma
StartAnimation.Syntax=[ ]\n[ <Mant\u0131ksal> ]\n[ <Sürgü veya Nokta>, <Sürgü veya Nokta>, ... ]\n[ <Sürgü veya Nokta>, <Sürgü veya Nokta>, ..., <Mant\u0131ksal> ]
StartRecord=Ba\u015flatKay\u0131t
StartRecord.Syntax=[ ]\n[ <Mant\u0131ksal> ]
StemPlot=GövdeÇizim
StemPlot.Syntax=[ <Liste> ]\n[ <Liste>, <Düzenleme -1|0|1> ]
StepGraph=Ad\u0131mGrafi\u011fi
StepGraph.Syntax=[ <Nokta Listesi> ]\n[ <Nokta Listesi>, <Mant\u0131ksal Birle\u015fim> ]\n[ <x-koordinat Listesi>, <y-koordinat Listesi> ]\n[ <Nokta Listesi>, <Mant\u0131ksal Birle\u015fim>, <Nokta Stili> ]\n[ <x-koordinat Listesi>, <y-koordinat Listesi>, <Mant\u0131ksal Birle\u015fim> ]\n[ <x-koordinat Listesi>, <y-koordinat Listesi>, <Mant\u0131ksal Birle\u015fim>, <Nokta Stili> ]
StickGraph=ÇubukGrafik
StickGraph.Syntax=[ <Nokta Listesi> ]\n[ <Nokta Listesi>, <Mant\u0131ksal Yatay> ]\n[ <x-koordinat Listesi>, <y-koordinat  Listesi> ]\n[ <x-koordinat Listesi>, <y-koordinat  Listesi>, <Mant\u0131ksal Yatay> ]
Stretch=Uzat
Stretch.Syntax=[ <Nesne>, <Vektör> ]\n[ <Nesne>, <Do\u011fru>, <Oran> ]
Substitute=YerineKoy
Substitute.SyntaxCAS=[ <\u0130fade>, <Yerine koy Liste> ]\n[ <\u0130fade>, <ba\u015flang\u0131ç>, <biti\u015f> ]
Sum=Toplam
Sum.Syntax=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]\n[ <Liste>, <Frekans Listesi> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
Sum.SyntaxCAS=[ <Liste> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
SumSquaredErrors=Hatalar\u0131nKareleriToplam\u0131
SumSquaredErrors.Syntax=[ <Nokta Listesi>, <Fonksiyon> ]
SurdText=KöklüGösterim
SurdText.Syntax=[ <Nokta> ]\n[ <Say\u0131> ]\n[ <Say\u0131>, <Liste> ]
Surface=Yüzey
Surface.Syntax=[ <Fonksiyon>, <Aç\u0131> ]\n[ <E\u011fri>, <Aç\u0131>, <Do\u011fru> ]\n[ <\u0130fade>, <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni 1>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Parametre De\u011fi\u015fkeni 2>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
TDistribution=TDa\u011f\u0131l\u0131m\u0131
TDistribution.Syntax=[ <Serbestlik Derecesi>, <Mant\u0131ksal De\u011fer> ]\n[ <Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
TDistribution.SyntaxCAS=[ <Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
TMean2Estimate=TOrtalama2Tahmin
TMean2Estimate.Syntax=[ <Örneklem Veri Listesi 1>, <Örneklem Veri Listesi 2>, <Seviye>, <Mant\u0131ksal Havuz> ]\n[ <Örneklem Ortalama 1>, <Örneklem Standart Sapma 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Ortalama 2>, <Örneklem Standart Sapma 2>, <Örneklem Büyüklü\u011fü 2>, <Seviye>, <Mant\u0131ksal Havuz> ]
TMeanEstimate=TOrtalamaTahmin
TMeanEstimate.Syntax=[ <Örneklem Veri Listesi>, <Seviye> ]\n[ <Örneklem Ortalama>, <Örneklem Standart Sapma>, <Örneklem Büyüklü\u011fü>, <Seviye> ]
TTest=TTesti
TTest.Syntax=[ <Örneklem Veri Listesi>, <Hipotezlenen Ortalama>, <Kuyruk> ]\n[ <Örneklem Ortalama>, <Örneklem Standart Sapma>, <Örneklem Büyüklü\u011fü>, <Hipotezlenen Ortalama>, <Kuyruk> ]
TTest2=TTesti2
TTest2.Syntax=[ <Örneklem Veri Listesi 1>, <Örneklem Veri Listesi 2>, <Kuyruk>, <Mant\u0131ksal Havuz> ]\n[ <Örneklem Ortalama 1>, <Örneklem Standart Sapma 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Ortalama 2>, <Örneklem Standart Sapma 2>, <Örneklem Büyüklü\u011fü 2>, <Kuyruk>, <Mant\u0131ksal Havuz> ]
TTestPaired=TTestiE\u015fle\u015ftirilmi\u015f
TTestPaired.Syntax=[ <Örneklem Veri Listesi 1>, <Örneklem Veri Listesi 2>, <Kuyruk> ]
TableText=TabloMetni
TableText.Syntax=[ <Liste>, <Liste>, ... ]\n[ <Liste>, <Liste>, ..., <Metin Hizalama> ]
Take=Al
Take.Syntax=[ <Liste>, <Ba\u015flang\u0131ç Yeri> ]\n[ <Metin>, <Ba\u015flang\u0131ç Yeri> ]\n[ <Liste>, <Ba\u015flang\u0131ç Yeri>, <Biti\u015f Yeri> ]\n[ <Metin>, <Ba\u015flang\u0131ç Yeri>, <Biti\u015f Yeri> ]
Take.SyntaxCAS=[ <Liste>, <Ba\u015flang\u0131ç Yeri> ]\n[ <Liste>, <Ba\u015flang\u0131ç Yeri>, <Biti\u015f Yeri> ]
Tangent=Te\u011fet
Tangent.Syntax=[ <Nokta>, <Konik> ]\n[ <Nokta>, <Fonksiyon> ]\n[ <E\u011fri üzerinde Nokta>, <E\u011fri> ]\n[ <x-De\u011feri>, <Fonksiyon> ]\n[ <Do\u011fru>, <Konik> ]\n[ <Konik>, <Konik> ]
Tangent.SyntaxCAS=[ <Say\u0131>, <Fonksiyon> ]\n[ <Nokta>, <Nesne> ]
TaylorSeries=TaylorPolinomu
TaylorSeries.Syntax=[ <Fonksiyon>, <x-De\u011feri>, <Derece Say\u0131> ]
TaylorSeries.SyntaxCAS=[ <\u0130fade>, <x-De\u011feri>, <Derece Say\u0131> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fi\u015fken De\u011feri>, <Derece Say\u0131> ]
Tetrahedron=DörtYüzlü
Tetrahedron.Syntax=[ <E\u015fkenar Üçgen> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Text=Metin
Text.Syntax=[ <Nesne> ]\n[ <Nesne>, <De\u011fi\u015fkenlerin de\u011fi\u015ftirilmesi için do\u011fru yanl\u0131\u015f s\u0131nama de\u011feri> ]
TextToUnicode=MetindenUniCode
TextToUnicode.Syntax=[ "<Metin>" ]
Textfield=GirdiAlan\u0131
Textfield.Syntax=[ ]\n[ <Ba\u011fl\u0131 Nesne> ]
TiedRank=Ba\u011fl\u0131S\u0131ras\u0131
TiedRank.Syntax=[ <Liste> ]
ToBase=Taban\u0131na
ToBase.Syntax=[ <Say\u0131>, <Taban> ]
ToComplex=Karma\u015f\u0131kSay\u0131ya
ToComplex.Syntax=[ <Vektör> ]
ToExponential=ÜstelGösterim
ToExponential.SyntaxCAS=[ <Karma\u015f\u0131k Say\u0131> ]
ToPoint=Noktaya
ToPoint.Syntax=[ <Karma\u015f\u0131k Say\u0131> ]
ToPolar=Kutupsala
ToPolar.Syntax=[ <Karma\u015f\u0131k Say\u0131> ]\n[ <Vektör> ]
ToolImage=AraçSimgesi
ToolImage.Syntax=[ <Say\u0131> ]\n[ <Say\u0131>, <Nokta> ]\n[ <Say\u0131>, <Nokta>, <Nokta> ]
Top=Üst
Top.Syntax=[ <\u0130kinci Dereceden Denklem> ]
Translate=Ötele
Translate.Syntax=[ <Nesne>, <Vektör> ]\n[ <Vektör>, <Ba\u015flang\u0131ç Noktas\u0131> ]
Transpose=Transpoz
Transpose.Syntax=[ <Matris> ]
TrapezoidalSum=ÇokgenselAlanToplam
TrapezoidalSum.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Yamuk Say\u0131s\u0131> ]
TravelingSalesman=GezginSat\u0131c\u0131
TravelingSalesman.Syntax=[ <Noktalar Listesi> ]
TriangleCenter=ÜçgenMerkezi
TriangleCenter.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Say\u0131> ]
TriangleCurve=ÜçgenE\u011fri
TriangleCurve.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Denklem> ]
Triangular=Üçgensel
Triangular.Syntax=[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
TrigCombine=TrigBirle\u015ftir
TrigCombine.Syntax=[ <\u0130fade> ]\n[ <\u0130fade>, <Hedef Fonksiyon> ]
TrigExpand=Trig\u0130fadeyiAç
TrigExpand.Syntax=[ <\u0130fade> ]\n[ <\u0130fade>, <Hedef Fonksiyon> ]
TrigExpand.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <Hedef Fonksiyon> ]\n[ <\u0130fade>, <Hedef Fonksiyon>, <Hedef De\u011fi\u015fken> ]\n[ <\u0130fade>, <Hedef Fonksiyon>, <Hedef De\u011fi\u015fken>, <Hedef De\u011fi\u015fken> ]
TrigSimplify=TrigSadele\u015ftir
TrigSimplify.Syntax=[ <\u0130fade> ]
Trilinear=ÜçlüDo\u011frusal
Trilinear.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Say\u0131>, <Say\u0131>, <Say\u0131> ]
TurningPoint=DönmeNoktas\u0131
TurningPoint.Syntax=[ <Polinom> ]
Turtle=Kaplumba\u011fa
Turtle.Syntax=[ ]
TurtleBack=Kaplumba\u011faGeri
TurtleBack.Syntax=[ <Kaplumba\u011fa>, <Mesafe> ]
TurtleDown=Kaplumba\u011faA\u015fa\u011f\u0131
TurtleDown.Syntax=[ <Kaplumba\u011fa> ]
TurtleForward=Kaplumba\u011fa\u0130leri
TurtleForward.Syntax=[ <Kaplumba\u011fa>, <Mesafe> ]
TurtleLeft=Kaplumba\u011faSol
TurtleLeft.Syntax=[ <Kaplumba\u011fa>, <Aç\u0131> ]
TurtleRight=Kaplumba\u011faSa\u011f
TurtleRight.Syntax=[ <Kaplumba\u011fa>, <Aç\u0131> ]
TurtleUp=Kaplumba\u011faYukar\u0131
TurtleUp.Syntax=[ <Kaplumba\u011fa> ]
UnicodeToLetter=UniCodedanHarfe
UnicodeToLetter.Syntax=[ <Tamsay\u0131> ]
UnicodeToText=UniCodedanMetne
UnicodeToText.Syntax=[ <Tamsay\u0131 Listesi> ]
Uniform=TekDüze
Uniform.Syntax=[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <De\u011fi\u015fken De\u011feri> ]\n[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Union=Birle\u015fim
Union.Syntax=[ <Liste>, <Liste> ]\n[ <Çokgen>, <Çokgen> ]
Unique=E\u015fsiz
Unique.Syntax=[ <Liste> ]
UnitOrthogonalVector=BirimDikVektör
UnitOrthogonalVector.Syntax=[ <Do\u011fru> ]\n[ <Do\u011fru Parças\u0131> ]\n[ <Vektör> ]
UnitOrthogonalVector.Syntax3D=[ <Do\u011fru> ]\n[ <Do\u011fru Parças\u0131> ]\n[ <Vektör> ]\n[ <Düzlem> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektör> ]
UnitVector=BirimVektör
UnitVector.Syntax=[ <Nesne> ]
UnitVector.SyntaxCAS=[ <Vektör> ]
UpdateConstruction=Yap\u0131y\u0131Güncelle
UpdateConstruction.Syntax=[ ]\n[ <Kaç kere> ]
UpperSum=ÜstToplam
UpperSum.Syntax=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131> ]
Variance=Varyans
Variance.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131lar Listesi>, <Frekanslar Listesi> ]
Variance.SyntaxCAS=[ <Say\u0131 Listesi> ]
Vector=Vektör
Vector.Syntax=[ <Nokta> ]\n[ <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f Noktas\u0131> ]
Vertex=Kö\u015feNoktas\u0131
Vertex.Syntax=[ <Konik> ]\n[ <E\u015fitsizlik> ]\n[ <Çokgen> ]\n[ <Çokgen>, <\u0130ndeks> ]\n[ <Do\u011fru Parças\u0131>, <\u0130ndeks> ]
VerticalText=Dü\u015feyMetin
VerticalText.Syntax=[ <Metin> ]\n[ <Metin>, <Nokta> ]
Volume=Hacim
Volume.Syntax=[ <Kat\u0131 Cisim> ]
Voronoi.Syntax=[ <Nokta Listesi> ]
Weibull.Syntax=[ <\u015eekil>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]\n[ <\u015eekil>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Weibull.SyntaxCAS=[ <\u015eekil>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
ZMean2Estimate=ZOrtalama2Tahmin
ZMean2Estimate.Syntax=[ <Örneklem 1 Veri Listesi>, <Örneklem 2 Veri Listesi>, <\u03c31>, <\u03c32>, <Seviye> ]\n[ <Örneklem 1 Ortalama>, <\u03c31>, <Örneklem 1 Büyüklük>, <Örneklem 2 Ortalama>, <\u03c32>, <Örneklem 1 Büyüklük>, <Seviye> ]
ZMean2Test=ZOrtalama2Testi
ZMean2Test.Syntax=[ <Örneklem 1 Veri Listesi>, <\u03c31>, <Örneklem 2 Veri Listesi>, <\u03c32>, <Kuyruk> ]\n[ <Örneklem 1 Ortalama>, <\u03c31>, <Örneklem 1 Büyüklük>, <Örneklem 2 Ortalama>, <\u03c32>, <Örneklem 2 Büyüklük>, <Kuyruk> ]
ZMeanEstimate=ZOrtalamaTahmin
ZMeanEstimate.Syntax=[ <Örneklem Veri Listesi>, <\u03c3>, <Seviye> ]\n[ <Örneklem Ortalamas\u0131>, <\u03c3>, <Örneklem Büyüklü\u011fü>, <Seviye> ]
ZMeanTest=ZOrtalamaTesti
ZMeanTest.Syntax=[ <Örneklem Veri Listesi>, <\u03c3>, <Varsay\u0131lan Ortalama>, <Kuyruk> ]\n[ <Örneklem Ortalamas\u0131>, <\u03c3>, <Örneklem Büyüklü\u011fü>, <Varsay\u0131lan Ortalama>, <Kuyruk> ]
ZProportion2Estimate=ZOran2Tahmini
ZProportion2Estimate.Syntax=[ <Örneklem Oran\u0131 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Oran\u0131 2>, <Örneklem Büyüklü\u011fü 2>, <Seviye> ]
ZProportion2Test=ZOran2Testi
ZProportion2Test.Syntax=[ <Örneklem Oran\u0131 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Oran\u0131 2>, <Örneklem Büyüklü\u011fü 2>, <Kuyruk> ]
ZProportionEstimate=ZOranTahmini
ZProportionEstimate.Syntax=[ <Örneklem Oran\u0131>, <Örneklem Büyüklü\u011fü>, <Seviye> ]
ZProportionTest=ZOranTesti
ZProportionTest.Syntax=[ <Örneklem Oran\u0131>, <Örneklem Büyüklü\u011fü>, <Hipotez Oran\u0131>, <Kuyruk> ]
Zip.Syntax=[ <\u0130fade>, <De\u011fi\u015fken1>, <Liste1>, <De\u011fi\u015fken2>, <Liste2>, ... ]
Zipf.Syntax=[ <Ö\u011fe Say\u0131s\u0131>, <Üs> ]\n[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Zipf.SyntaxCAS=[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
ZoomIn=Yak\u0131nla\u015ft\u0131r
ZoomIn.Syntax=[ <Ölçek Faktörü> ]\n[ <Ölçek Faktörü>, <Merkez Nokta> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut=Uzakla\u015ft\u0131r
ZoomOut.Syntax=[ <Ölçek Faktörü> ]\n[ <Ölçek Faktörü>, <Merkez Nokta> ]
mad=oms
mad.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
mean=orta
mean.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
mean.SyntaxCAS=[ <Say\u0131 Listesi> ]
nCr=nBk
nCr.Syntax=[ <Say\u0131 n>, <Say\u0131 r> ]
stdev=stsap
stdev.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
stdevp=stsapp
stdevp.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
stdevp.SyntaxCAS=[ <Say\u0131 Listesi> ]